# Generated by Django 5.2.4 on 2025-09-09 03:33

import cuid
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='producto',
            fields=[
                ('id_producto', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('nombre_producto', models.CharField(max_length=100)),
                ('categoria_producto', models.CharField(choices=[('Celulares', 'Celular'), ('Auriculares', 'Auricular'), ('Cargadores', 'Cargador')], max_length=20)),
                ('modelo_producto', models.CharField(max_length=50)),
                ('capacidad_producto', models.IntegerField()),
                ('color_producto', models.CharField(max_length=20)),
                ('descripcion_producto', models.TextField(max_length=254)),
                ('precio_producto', models.FloatField(max_length=15)),
                ('codigo_barras_producto', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='user',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('rol', models.CharField(choices=[('Admin', 'Admin'), ('Vendedor', 'Vendedor'), ('Cliente', 'Cliente')])),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='cliente',
            fields=[
                ('id_cliente', models.CharField(default=cuid.cuid, max_length=50, primary_key=True, serialize=False, unique=True)),
                ('nombre_cliente', models.CharField(max_length=100)),
                ('apellido_cliente', models.CharField(max_length=100)),
                ('tipo_documento', models.CharField(choices=[('CC', 'Cedula de Ciudadania'), ('CE', 'Cedula de Extranjeria'), ('NIT', 'NIT'), ('PAS', 'Pasaporte')], default='CC', max_length=4)),
                ('numero_documento', models.IntegerField(max_length=20)),
                ('direccion_cliente', models.TextField(max_length=200)),
                ('telefono_cliente', models.TextField(max_length=15)),
                ('correo_cliente', models.EmailField(max_length=100)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='Cliente', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='empresaAdmin',
            fields=[
                ('id_empresa', models.CharField(default=cuid.cuid, max_length=50, primary_key=True, serialize=False)),
                ('nombre_empresa', models.CharField(max_length=100)),
                ('nit_empresa', models.CharField(max_length=20)),
                ('direccion_empresa', models.CharField(max_length=200)),
                ('telefono_empresa', models.CharField(max_length=15)),
                ('correo_empresa', models.EmailField(max_length=100)),
                ('regimen_empresa', models.CharField(default='comun', max_length=50)),
                ('representante_legal', models.CharField(max_length=100)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('cufe', models.CharField(max_length=253)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='Admin', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='factura',
            fields=[
                ('id_factura', models.CharField(default=cuid.cuid, max_length=50, primary_key=True, serialize=False, unique=True)),
                ('fecha_emision', models.DateTimeField(auto_now_add=True)),
                ('fecha_vencimiento', models.DateTimeField()),
                ('total_sin_iva', models.IntegerField(max_length=10)),
                ('iva', models.FloatField(default=0.19, max_length=4)),
                ('total_con_iva', models.FloatField()),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.cliente')),
            ],
        ),
        migrations.CreateModel(
            name='DetalleFactura',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.PositiveIntegerField()),
                ('precio_unitario', models.DecimalField(decimal_places=2, max_digits=10)),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=10)),
                ('factura', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.factura')),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.producto')),
            ],
        ),
        migrations.CreateModel(
            name='inventario',
            fields=[
                ('id_inventario', models.CharField(default=cuid.cuid, max_length=50, primary_key=True, serialize=False)),
                ('cantidad_disponible', models.IntegerField()),
                ('fecha_ultima_actualizacion', models.DateTimeField(auto_now=True)),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.producto')),
            ],
        ),
        migrations.AddField(
            model_name='factura',
            name='productos',
            field=models.ManyToManyField(through='users.DetalleFactura', to='users.producto'),
        ),
        migrations.CreateModel(
            name='vendedor',
            fields=[
                ('id_vendedor', models.CharField(default=cuid.cuid, max_length=50, primary_key=True, serialize=False)),
                ('nombre_vendedor', models.CharField(max_length=100)),
                ('apellido_vendedor', models.CharField(max_length=100)),
                ('numero_documento', models.IntegerField(max_length=20)),
                ('direccion_vendedor', models.TextField(max_length=200)),
                ('telefono_vendedor', models.CharField(max_length=15)),
                ('correo_vendedor', models.EmailField(max_length=100)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('tipo_documento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.empresaadmin')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='Vendedor', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='historialFactura',
            fields=[
                ('id_historial', models.CharField(default=cuid.cuid, max_length=50, primary_key=True, serialize=False)),
                ('fecha_modificacion', models.DateTimeField(auto_now_add=True)),
                ('cambios_realizados', models.TextField()),
                ('factura', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.factura')),
                ('vendedor_responsable', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.vendedor')),
            ],
        ),
        migrations.AddField(
            model_name='factura',
            name='vendedor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.vendedor'),
        ),
    ]
